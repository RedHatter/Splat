/* libsplat.vapi generated by valac 0.27.1, do not modify. */

namespace libsplat {
	[CCode (cheader_filename = "libsplat.h")]
	public class PluginManager : GLib.Object {
		public delegate string? Command (string[] args);
		public string? call_command (string name, string[] args = new string[0]);
		public string call_command_str (string command);
		public GLib.Object get_plugin (string name);
		public void load_plugins ();
		public void open_panel (libsplat.Panel panel);
		public void register_command (string name, owned libsplat.PluginManager.Command cmd);
		public static libsplat.PluginManager instance { get; }
		public signal void command_called (string command, string? result, string[] args);
		public signal void panel_opened (libsplat.Panel panel);
	}
	[CCode (cheader_filename = "libsplat.h")]
	public class Preferences : GLib.Object {
		public struct ItemInfo {
			public string name;
			public string id;
			public string command;
			public string accel;
		}
		public Preferences ();
		public void delete_key (string key);
		public string[]? get_array (string key);
		public bool? get_boolean (string key);
		public double? get_double (string key);
		public int? get_int (string key);
		public GLib.MenuModel get_menu (Gtk.Application group);
		public string? get_string (string key);
		public bool has_key (string key);
		public void register_menu (string name, Gee.List<libsplat.Preferences.ItemInfo?> menu);
		public void set_all (string key, Json.Object new_obj);
		public void set_array (string key, string[] value);
		public void set_boolean (string key, bool value);
		public void set_double (string key, double value);
		public void set_int (string key, int value);
		public void set_string (string key, string value);
		public void write ();
		public static libsplat.Preferences instance { get; }
	}
	[CCode (cheader_filename = "libsplat.h")]
	public interface Panel : Gtk.Widget {
		public abstract string command { get; set; }
		public abstract string title { get; set; }
		public signal void activate ();
	}
}
[CCode (cheader_filename = "libsplat.h")]
public class Paths : GLib.Object {
	public Paths ();
	public static string cache { get; }
	public static string files { get; }
	public static string plugins { get; }
	public static string settings { get; }
}
